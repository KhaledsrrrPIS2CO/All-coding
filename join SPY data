import os
import pandas as pd
import numpy as np


print("hello world")
def test_run():
    start_date = ' 2022-10-01'
    end_date = '2022-10-18'
    dates = pd.date_range(start_date, end_date) # called daterange fun (for index)
    
    #create empty dataframe
    df1 = pd.DataFrame(index=dates) 
    
    #Read spy data into tempo datafram
    dfSPY = pd.read_csv("/Users/khaled/All coding/data/SPY.csv", index_col="Date", 
                        parse_dates=True, usecols=['Date', 'Adj Close'],
                        na_values=['nan'])
    
    #rename the Adj Close columun to SPY to prevent clash
    dfSPY = dfSPY.rename(columns={'Adj Close':'SPY'})
    
    #join the 2 DF using DataFrame.join(), with how='inner'
    print("dfspy: " ,df1)
    df1=df1.join(dfSPY,how='inner')
   
    #read more stocks
    symbols = ['GOOG', 'AAPL', 'GLD', 'TWTR']
    
    #for loop to read and join each hstock like SPY
    for symbol in symbols:
        df_temp = pd.read_csv("/Users/khaled/All coding/data/{}.csv".format(symbol), index_col ='Date', 
                              parse_dates=True, usecols=['Date', 'Adj Close'],
                              na_values=['nan'])
        df_temp = df_temp.rename(columns={'Adj Close':symbol})
        df1 = df1.join(df_temp)
    print("The list:")
    print(df1)
    df1.plot()
    

if __name__ == "__main__":
    test_run()
    



    
###############
"""Utility functions"""


'''
def symbol_to_path(symbol, base_dir="data"):
    """Return CSV file path given ticker symbol."""
    return os.path.join(base_dir, "{}.csv".format(str(symbol)))


def get_data(symbols, dates):
    """Read stock data (adjusted close) for given symbols from CSV files."""
    df = pd.DataFrame(index=dates)
    if 'SPY' not in symbols:  # add SPY for reference, if absent
        symbols.insert(0, 'SPY')

    for symbol in symbols:
        # TODO: Read and join data for each symbol

        return df


def test_run():
    # Define a date range
    dates = pd.date_range('2010-01-22', '2010-01-26')

    # Choose stock symbols to read
    symbols = ['GOOG', 'IBM', 'GLD']
    
    # Get stock data
    df = get_data(symbols, dates)
    print (df)


if __name__ == "__main__":
    test_run()

'''
#test
#test
#$Test3$$$$
if __# numpy is a model to compute arrayssa
Vollib